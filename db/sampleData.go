package db

import (
	"fakeApi/personGen"
	log "github.com/sirupsen/logrus"
)

func FillSampleData() {
	maleNames := []string{"Александр", "Алексей", "Анатолий", "Андрей", "Антон", "Арсений", "Артем",
		"Борис", "Вадим", "Валентин", "Валерий", "Василий", "Виктор", "Виталий", "Владимир", "Владислав",
		"Владлен", "Всеволод", "Геннадий", "Георгий", "Глеб", "Григорий", "Давид", "Даниил", "Денис",
		"Дмитрий", "Евгений", "Егор", "Иван", "Игорь", "Илья", "Кирилл", "Константин", "Лев", "Леонид",
		"Максим", "Марат", "Марк", "Матвей", "Мирон", "Михаил", "Никита", "Николай", "Олег", "Павел", "Петр",
		"Роман", "Руслан", "Савелий", "Семен", "Сергей", "Станислав", "Тихон", "Тимофей", "Федор", "Юрий",
		"Ярослав", "Захар"}

	femaleNames := []string{"Алевтина", "Александра", "Алена", "Алина", "Алиса", "Алла", "Анастасия",
		"Ангелина", "Анжела", "Анжелика", "Анна", "Антонина", "Анфиса", "Валентина", "Валерия", "Варвара",
		"Василиса", "Вера", "Вероника", "Виктория", "Галина", "Дарья", "Евгения", "Екатерина", "Елена",
		"Елизавета", "Жанна", "Зинаида", "Злата", "Зоя", "Инна", "Ирина", "Карина", "Кира", "Клавдия",
		"Кристина", "Лада", "Лариса", "Лидия", "Лилия", "Любовь", "Людмила", "Маргарита", "Марина", "Мария",
		"Мила", "Милана", "Надежда", "Наталья", "Нина", "Оксана", "Ольга", "Полина", "Раиса", "Регина",
		"Римма", "Руфина", "Светлана", "София", "Таисия", "Тамара", "Татьяна", "Ульяна", "Фаина", "Эвелина",
		"Эльвира", "Эльза", "Юлия", "Яна", "Ярослава"}

	maleSurnames := []string{"Абрамов", "Алексеев", "Андреев", "Беляков", "Богданов", "Борисов", "Васильев",
		"Владимиров", "Воронов", "Гаврилов", "Горбунов", "Григорьев", "Данилов", "Дмитриев", "Дорофеев", "Егоров",
		"Емельянов", "Ефимов", "Жданов", "Жуков", "Зайцев", "Зуев", "Иванов", "Игнатьев", "Исаев", "Карпов",
		"Кириллов", "Козлов", "Корнилов", "Куликов", "Лазарев", "Лапин", "Лебедев", "Макаров", "Мельников",
		"Михайлов", "Нестеров", "Никитин", "Николаев", "Новиков", "Орехов", "Орлов", "Осипов", "Павлов", "Петров",
		"Поляков", "Родионов", "Романов", "Рябов", "Савельев", "Сергеев", "Сидоров", "Смирнов", "Соколов", "Сорокин",
		"Терехин", "Тимофеев", "Успенский", "Устинов", "Федоров", "Федосеев", "Фомин", "Харитонов", "Харламов",
		"Цветков", "Царев", "Чернов", "Шестаков", "Ширяев", "Шубин", "Щербаков", "Щербинин", "Юдин", "Юрьев",
		"Яковлев", "Ярцев", "Ярославов"}

	femaleSurnames := []string{"Абрамова", "Алексеева", "Андреева", "Белякова", "Богданова", "Борисова", "Васильева",
		"Владимирова", "Воронова", "Гаврилова", "Горбунова", "Григорьева", "Данилова", "Дмитриева", "Дорофеева",
		"Егорова", "Емельянова", "Ефимова", "Жданова", "Жукова", "Зайцева", "Зуева", "Иванова", "Игнатьева", "Исаева",
		"Карпова", "Кириллова", "Козлова", "Корнилова", "Куликова", "Лазарева", "Лапина", "Лебедева", "Макарова",
		"Мельникова", "Михайлова", "Нестерова", "Никитина", "Николаева", "Новикова", "Орехова", "Орлова", "Осипова",
		"Павлова", "Петрова", "Полякова", "Родионова", "Романова", "Рябова", "Савельева", "Сергеева", "Сидорова",
		"Смирнова", "Соколова", "Сорокина", "Терехина", "Тимофеева", "Успенская", "Устинова", "Федорова", "Федосеева",
		"Фомина", "Харитонова", "Харламова", "Цветкова", "Царева", "Чернова", "Шестакова", "Ширяева", "Шубина",
		"Щербакова", "Щербинина", "Юдина", "Юрьева", "Яковлева", "Ярцева", "Ярославова"}

	malePatronymics := []string{"Александрович", "Алексеевич", "Анатольевич", "Андреевич", "Антонович", "Аркадьевич",
		"Арсеньевич", "Артемович", "Борисович", "Вадимович", "Валентинович", "Валерьевич", "Васильевич", "Викторович",
		"Витальевич", "Владимирович", "Владиславович", "Владленович", "Вячеславович", "Геннадьевич", "Георгиевич",
		"Григорьевич", "Данилович", "Денисович", "Дмитриевич", "Евгеньевич", "Егорович", "Иванович", "Игнатьевич",
		"Игоревич", "Ильич", "Константинович", "Леонидович", "Максимович", "Маркович", "Матвеевич", "Михайлович",
		"Николаевич", "Олегович", "Павлович", "Петрович", "Романович", "Семенович", "Сергеевич", "Станиславович",
		"Степанович", "Тихонович", "Тимофеевич", "Федорович", "Феликсович", "Юрьевич", "Яковлевич"}

	femalePatronymics := []string{"Александровна", "Алексеевна", "Анатольевна", "Андреевна", "Антоновна", "Аркадьевна",
		"Арсеньевна", "Артемовна", "Борисовна", "Вадимовна", "Валентиновна", "Валерьевна", "Васильевна", "Викторовна",
		"Витальевна", "Владимировна", "Владиславовна", "Владленовна", "Вячеславовна", "Геннадьевна", "Георгиевна",
		"Григорьевна", "Даниловна", "Денисовна", "Дмитриевна", "Евгеньевна", "Егоровна", "Ивановна", "Игнатьевна",
		"Игоревна", "Ильинична", "Константиновна", "Леонидовна", "Максимовна", "Марковна", "Матвеевна", "Михайловна",
		"Николаевна", "Олеговна", "Павловна", "Петровна", "Романовна", "Семеновна", "Сергеевна", "Станиславовна",
		"Степановна", "Тихоновна", "Тимофеевна", "Федоровна", "Феликсовна", "Юрьевна", "Яковлевна"}

	addresses := []string{"Абакан", "Альметьевск", "Анапа", "Архангельск", "Астрахань", "Барнаул", "Белгород", "Бийск",
		"Благовещенск", "Братск", "Брянск", "Великий Новгород", "Владивосток", "Владикавказ", "Владимир", "Волгоград",
		"Вологда", "Воронеж", "Грозный", "Екатеринбург", "Иваново", "Ижевск", "Иркутск", "Йошкар-Ола", "Казань",
		"Калининград", "Калуга", "Кемерово", "Киров", "Кострома", "Краснодар", "Красноярск", "Курган", "Курск",
		"Липецк", "Магадан", "Магнитогорск", "Майкоп", "Махачкала", "Мурманск", "Нальчик", "Находка", "Нижневартовск",
		"Нижний Новгород", "Нижний Тагил", "Новокузнецк", "Новороссийск", "Новосибирск", "Омск", "Оренбург", "Орёл",
		"Пенза", "Пермь", "Петрозаводск", "Петропавловск-Камчатский", "Псков", "Пятигорск", "Ростов-на-Дону", "Рязань",
		"Самара", "Саранск", "Саратов", "Смоленск", "Ставрополь", "Стерлитамак", "Сыктывкар", "Тамбов", "Тверь",
		"Тольятти", "Томск", "Тула", "Тюмень", "Улан-Удэ", "Ульяновск", "Уфа", "Хабаровск", "Ханты-Мансийск",
		"Чебоксары", "Челябинск", "Череповец", "Чита", "Элиста"}

	tables := [][]string{maleNames, femaleNames, maleSurnames, femaleSurnames,
		malePatronymics, femalePatronymics, addresses}

	tableNames := []string{"male_names", "female_names", "male_surnames", "female_surnames",
		"male_patronymics", "female_patronymics", "addresses"}

	tablesMap := make(map[string][]personGen.RandomData)

	for n, table := range tables {
		var list []personGen.RandomData
		for i, value := range table {
			list = append(list, personGen.RandomData{
				Key:   i,
				Value: value,
			})
		}
		tablesMap[tableNames[n]] = list
	}

	for key, value := range tablesMap {
		err := CreateAndFill(key, value)
		if err != nil {
			log.Error(err)
		}
	}
}

func CreateAndFill(tn string, data []personGen.RandomData) error {
	var err error

	if DBC.Migrator().HasTable(tn) {
		log.WithField("name", tn).Info("Table already exists, skipping")
		return nil
	}

	err = DBC.AutoMigrate(&personGen.RandomData{})
	if err != nil {
		return err
	}

	err = DBC.Migrator().RenameTable("random_data", tn)
	if err != nil {
		return err
	}

	err = DBC.Table(tn).Create(&data).Error
	if err != nil {
		return err
	}

	return nil
}
